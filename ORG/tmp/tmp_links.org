* translate : 
** from ru
#+begin_src translate 
подробней про : 
#+end_src

#+RESULTS:
: more about: close their eyes and try to resist the urge to open them


** from en
#+begin_src translate :dest ru
She will not cease; and how she loves to dance
#+end_src

#+RESULTS:
: Она не перестанет; и как она любит танцевать
* link to 
[[file:d:/Development/lisp/Dropbox/orgs/capture/Pensieve.org::*Выбрать игровой движок][Выбрать игровой движок]]
* Give 
smba2 = PB12
smba3 = PB9
smba1 = PB5
scl3 = PA8

scl1 = PB6
sda1 = PB7
* Texts
#+begin_src dot :file e:\Temp\my-dot-diagram.png :cmdline -Kdot -Tpng
graph graphname { 
		a -- b; 
		b -- c;
		b -- d;
		d -- a;
	} 
#+end_src

#+RESULTS:
[[file:e:\Temp\my-dot-diagram.png]]

* Calc 
** sandbox
#+BEGIN_SRC elisp
(* 
	(/ 0.02 100)
	1000000
	)
#+END_SRC

#+RESULTS:
: 200.0

#+BEGIN_SRC elisp
(/ 
	5000
	220
	)
#+END_SRC

#+RESULTS:
: 22


#+BEGIN_SRC elisp
(+ 
	(* 200 36)
	(* 1000 25)
	(* 2000 15)
	(* 5000 8)
	(* 20000 5)
	)
#+END_SRC

		#+RESULTS:
		: 202200
		

#+BEGIN_SRC calc :var a=2 b=9 c=64 x=5
((a+b)^3 + sqrt(c)) / (2x+1)
#+END_SRC

#+begin_src emacs-lisp :tangle yes
(setq сутки10 100)
(setq час10 100)
(setq минут10 100)
(setq сутки12 24)
(setq час12 60)
(setq минут12 60)
#+end_src

#+RESULTS:
: 60

#+begin_src emacs-lisp :tangle yes
(setq cof24 (/ сутки10 сутки12))
#+end_src

#+RESULTS:
: 4

#+begin_src emacs-lisp :tangle yes
(setq cof10 (/  сутки12 сутки10))
#+end_src

#+RESULTS:
: 0

#+begin_src emacs-lisp :tangle yes
(* сутки10 cof10)
#+end_src

#+RESULTS:
: 0
** Conveert 
(format "%x" 1000)  ; decimal to hex. Returns a
(format "%d" #xe8) ; hex a to decimal. Returns 10.
** run 
(calc)
*** doc
**** Hex\dec
    Type any number. For example, 10.
    Type “d6” to turn the display into hexadecimal form.
    Type “d0” to turn the display into decimal form.

* read
** 
* progn 
#+begin_src emacs-lisp results output silent
(setq org-hide-leading-stars t)
(setq ac-auto-start nil)
(setq ac-auto-show-menu nil)
;; (define-key ac-mode-map (kbd "M-TAB") 'auto-complete)
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:complete-on-dot t)  
(setq org-adapt-indentation nil)
#+end_src

#+RESULTS:

#+begin_src emacs-lisp :tangle yes
(use-package jedi 
	:ensure t
	;; :init
	;; (elpy-enable)
	:config
	;; (defun my/python-mode-hook ()
	;; (add-to-list 'company-backends 'company-jedi))
	;; (add-hook 'python-mode-hook 'my/python-mode-hook)
	;; (define-key evil-insert-state-map (kbd "C-SPC") 'company-jedi)
	(add-hook 'python-mode-hook 'jedi:setup)
	(setq jedi:complete-on-dot t)  
	)
#+end_src
* tmp 
** 1
|  2.910927309337285 |   7.269066e-5 | 2.911 |   |
| 2.5525838125723244 |  4.1618743e-4 | 2.553 |   |
| 2.4976050843015365 |   3.949157e-4 | 2.498 |   |
|  3.298723696247312 |  2.7630375e-4 | 3.299 |   |
|  3.339466860947985 | -4.6686095e-4 | 3.339 |   |
| 2.5525838125723244 |  4.1618743e-4 | 2.553 |   |
| 0.7987838742512301 |  2.1612575e-4 | 0.799 |   |
|  3.689956253674262 |   4.374633e-5 | 3.690 |   |
| 1.0765425101389436 |  4.5748986e-4 | 1.077 |   |
| 0.8003229568605773 | -3.2295686e-4 | 0.800 |   |
| 0.7987838742512299 |  2.1612575e-4 | 0.799 |   |
|   3.62270548784303 |  2.9451216e-4 | 3.623 |   |
| 3.4116264418033957 |   3.735582e-4 | 3.412 |   |
|  0.805151887635888 |  -0.022151888 | 0.783 | x |
|  0.783085231635888 | -8.5231636e-5 | 0.783 |   |
|  1.135842965698281 |   1.570343e-4 | 1.136 |   |
| 1.0765425101389436 |  4.5748986e-4 | 1.077 |   |
|  0.805151887635888 | -1.5188764e-4 | 0.805 |   |
|  2.547674997548147 |  3.2500245e-4 | 2.548 |   |
|  1.075502159602551 |   4.978404e-4 | 1.076 |   |
| 1.0696624134963486 |   3.375865e-4 | 1.070 |   |
| 0.8615784447125984 |  4.2155529e-4 | 0.862 |   |
| 0.7987838742512299 |  2.1612575e-4 | 0.799 |   |
| 1.0745874778462596 |  4.1252215e-4 | 1.075 |   |
| 1.5707560555816646 |  2.4394442e-4 | 1.571 |   |
|  2.567310257644857 | -3.1025764e-4 | 2.567 |   |
| 0.7987838742512301 |  2.1612575e-4 | 0.799 |   |
| 1.0549393847194648 |   6.061528e-5 | 1.055 |   |
| 1.1203764474178628 | -3.7644742e-4 | 1.120 |   |
| 0.8260402620792718 | -4.0262079e-5 | 0.826 |   |
|  3.689956253674262 |   4.374633e-5 | 3.690 |   |
| 0.8018620394699246 |  1.3796053e-4 | 0.802 |   |
| 2.7685716736361368 |  4.2832636e-4 | 2.769 |   |
| 1.1569283974463385 |   7.160255e-5 | 1.157 |   |
| 1.9684866573551507 | -4.8665736e-4 | 1.968 |   |
| 1.4289613375962027 |    3.86624e-5 | 1.429 |   |
|                0.0 |            0. | 0.000 |   |
| 0.6048594654734747 |  1.4053453e-4 | 0.605 |   |
#+TBLFM: $2=$3 - $1



| 2.567 |
| 0.799 |
| 1.055 |
| 1.120 |
| 0.826 |
| 3.690 |
| 0.802 |
| 2.769 |
| 1.157 |
| 1.968 |
| 1.429 |
| 0.000 |
| 0.605 |



